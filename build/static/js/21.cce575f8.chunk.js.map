{"version":3,"sources":["reusable/DocsLink.js","views/base/navbars/Navbars.js"],"names":["DocsLink","props","name","text","rest","href","className","rel","target","React","memo","CNavbars","useState","isOpen","setIsOpen","isOpenDropdown","setIsOpenDropdown","navbarText","setNavbarText","expandable","color","inNavbar","onClick","show","navbar","inline","placeholder","size","type","inNav","light","src","alt","toggleable"],"mappings":"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","file":"static/js/21.cce575f8.chunk.js","sourcesContent":["import React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = props => {\n  const {\n    name,\n    text,\n    ...rest\n  } = props\n\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\n\n  return (\n    <div className=\"card-header-actions\">\n      <CLink \n        {...rest}\n        href={href}\n        rel=\"noreferrer noopener\" \n        target=\"_blank\" \n        className=\"card-header-action\"  \n      >\n        <small className=\"text-muted\">{ text || 'docs' }</small>\n      </CLink>\n    </div>\n  )\n}\n\nexport default React.memo(DocsLink)","import React, { useState } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCollapse,\n  CDropdownItem,\n  CDropdownMenu,\n  CDropdownToggle,\n  CNavbar,\n  CNavbarNav,\n  CNavbarBrand,\n  CNavbarText,\n  CToggler,\n  CNavLink,\n  CDropdown,\n  CForm,\n  CInput,\n  CButton,\n  CImg\n} from '@coreui/react'\nimport { DocsLink } from 'src/reusable'\n\nconst CNavbars = () => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [isOpenDropdown, setIsOpenDropdown] = useState(false)\n  const [navbarText, setNavbarText] = useState(false)\n\n  return (\n    <>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar\n          <DocsLink name=\"CNavbar\"/>\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar expandable=\"sm\" color=\"info\" >\n            <CToggler inNavbar onClick={() => setIsOpen(!isOpen)}/>\n            <CNavbarBrand>\n              NavbarBrand\n            </CNavbarBrand>\n            <CCollapse show={isOpen} navbar>\n              <CNavbarNav>\n                <CNavLink>Home</CNavLink>\n                <CNavLink>Link</CNavLink>\n              </CNavbarNav>\n              <CNavbarNav className=\"ml-auto\">\n                <CForm inline>\n                  <CInput\n                    className=\"mr-sm-2\"\n                    placeholder=\"Search\"\n                    size=\"sm\"\n                  />\n                  <CButton color=\"light\" className=\"my-2 my-sm-0\" type=\"submit\">Search</CButton>\n                </CForm>\n                <CDropdown\n                  inNav\n                >\n                  <CDropdownToggle color=\"primary\">\n                    Lang\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem>EN</CDropdownItem>\n                    <CDropdownItem>ES</CDropdownItem>\n                    <CDropdownItem>RU</CDropdownItem>\n                    <CDropdownItem>FA</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n                <CDropdown\n                  inNav\n                >\n                  <CDropdownToggle color=\"primary\">\n                    User\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem>Account</CDropdownItem>\n                    <CDropdownItem>Settings</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n              </CNavbarNav>\n            </CCollapse>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar brand\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar color=\"faded\" light>\n            <CNavbarBrand>\n              <CImg\n                src=\"https://placekitten.com/g/30/30\"\n                className=\"d-inline-block align-top\"\n                alt=\"CoreuiVue\"\n              />\n              CoreUI React\n            </CNavbarBrand>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar text\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar toggleable=\"sm\" light color=\"light\">\n            <CToggler\n              inNavbar\n              onClick={()=>{ setNavbarText(!navbarText)}}\n            />\n            <CNavbarBrand>NavbarBrand</CNavbarBrand>\n            <CCollapse show={navbarText}>\n              <CNavbarNav>\n                <CNavbarText>Navbar text</CNavbarText>\n              </CNavbarNav>\n            </CCollapse>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar dropdown\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar expandable=\"false\" color=\"primary\" >\n            <CToggler inNavbar onClick={()=>{setIsOpenDropdown(!isOpenDropdown)}} />\n            <CCollapse show={isOpenDropdown} navbar>\n              <CNavbarNav>\n                <CNavLink>Home</CNavLink>\n                <CNavLink>Link</CNavLink>\n                <CDropdown\n                  inNav\n                >\n                  <CDropdownToggle color=\"primary\">\n                    Lang\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem>EN</CDropdownItem>\n                    <CDropdownItem>ES</CDropdownItem>\n                    <CDropdownItem>RU</CDropdownItem>\n                    <CDropdownItem>FA</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n                <CDropdown\n                  inNav\n                >\n                  <CDropdownToggle color=\"primary\">\n                    User\n                  </CDropdownToggle>\n                  <CDropdownMenu>\n                    <CDropdownItem>Account</CDropdownItem>\n                    <CDropdownItem>Settings</CDropdownItem>\n                  </CDropdownMenu>\n                </CDropdown>\n              </CNavbarNav>\n            </CCollapse>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar form\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar light color=\"light\">\n            <CForm inline>\n              <CInput\n                className=\"mr-sm-2\"\n                placeholder=\"Search\"\n                size=\"sm\"\n              />\n              <CButton color=\"outline-success\" className=\"my-2 my-sm-0\" type=\"submit\">Search</CButton>\n            </CForm>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          CNavbar input group\n        </CCardHeader>\n        <CCardBody>\n          <CNavbar light color=\"light\">\n            <CForm inline>\n              <CInput\n                className=\"mr-sm-2\"\n                placeholder=\"Username\"\n              />\n            </CForm>\n          </CNavbar>\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nexport default CNavbars\n"],"sourceRoot":""}