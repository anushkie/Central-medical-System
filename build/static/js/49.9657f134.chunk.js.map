{"version":3,"sources":["containers/PatientLog.js"],"names":["createData","name","calories","fat","cons","carbs","pres","protein","mess","rows","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","padding","indeterminate","checked","onChange","inputProps","headCell","align","sortDirection","active","direction","onClick","property","event","className","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","clsx","variant","component","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","EnhancedTable","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","size","target","newSelecteds","n","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","tabIndex","scope","style","colSpan","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","value","control"],"mappings":"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","file":"static/js/49.9657f134.chunk.js","sourcesContent":["// import React from \"react\";\r\n\r\n// const PatientLog = () => {\r\n//   return <>PatientLog</>;\r\n// };\r\n\r\n// export default PatientLog;\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport DocLayout from \"../containers/DocLayout\";\r\n\r\nfunction createData(name, calories, fat, cons, carbs, pres, protein, mess) {\r\n  return { name, calories, fat, cons, carbs, pres, protein, mess };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    \"Vaishali\",\r\n    23,\r\n    1,\r\n    \"23/5/2021\",\r\n    7,\r\n    \"Click here\",\r\n    \"Click here\",\r\n    \"Chat\"\r\n  ),\r\n  createData(\r\n    \"Ishita\",\r\n    33,\r\n    11,\r\n    \"11/08/2020\",\r\n    8,\r\n    \"Click here\",\r\n    \"Click here\",\r\n    \"Chat\"\r\n  ),\r\n  createData(\"Sneh\", 27, 43, \"1/1/2021\", 1, \"Click here\", \"Click here\", \"Chat\"),\r\n  createData(\r\n    \"Ankur\",\r\n    40,\r\n    34,\r\n    \"31/07/2020\",\r\n    6,\r\n    \"Click here\",\r\n    \"Click here\",\r\n    \"Chat\"\r\n  ),\r\n  createData(\r\n    \"Vivek\",\r\n    54,\r\n    91,\r\n    \"12/2/2019\",\r\n    5,\r\n    \"Click here\",\r\n    \"Click here\",\r\n    \"Chat\"\r\n  ),\r\n\r\n  createData(\r\n    \"Gozdem\",\r\n    13,\r\n    112,\r\n    \"12/05/2021\",\r\n    5,\r\n    \"Click here\",\r\n    \"Click here\",\r\n    \"Chat\"\r\n  ),\r\n\r\n  createData(\r\n    \"Greta\",\r\n    63,\r\n    10,\r\n    \"26/04/2021\",\r\n    2,\r\n    \"Click here\",\r\n    \"Click here\",\r\n    \"Chat\"\r\n  ),\r\n  createData(\r\n    \"Ayush\",\r\n    20,\r\n    14,\r\n    \"12/6/2020\",\r\n    3,\r\n    \"Click here\",\r\n    \"Click here\",\r\n    \"Chat\"\r\n  ),\r\n  createData(\r\n    \"Naman\",\r\n    19,\r\n    71,\r\n    \"23/09/2020\",\r\n    3,\r\n    \"Click here\",\r\n    \"Click here\",\r\n    \"Chat\"\r\n  ),\r\n  createData(\r\n    \"Vartika\",\r\n    42,\r\n    41,\r\n    \"19/09/2021\",\r\n    5,\r\n    \"Click here\",\r\n    \"Click here\",\r\n    \"Chat\"\r\n  ),\r\n  createData(\r\n    \"Maddy\",\r\n    23,\r\n    98,\r\n    \"11/11/2020\",\r\n    8,\r\n    \"Click here\",\r\n    \"Click here\",\r\n    \"Chat \"\r\n  ),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: \"name\", numeric: false, disablePadding: true, label: \"Name\" },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Age\" },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"ID\" },\r\n  {\r\n    id: \"cons\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Last consultation\",\r\n  },\r\n\r\n  {\r\n    id: \"carbs\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Number of Appointments\",\r\n  },\r\n  { id: \"pres\", numeric: true, disablePadding: false, label: \"Prescriptions\" },\r\n\r\n  {\r\n    id: \"protein\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"View Full Details\",\r\n  },\r\n\r\n  { id: \"mess\", numeric: true, disablePadding: false, label: \"Message\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Patients Data{\" \"}\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <DocLayout>\r\n      <div className=\"margin-top\">\r\n        <div className={classes.root}>\r\n          <Paper className={classes.paper}>\r\n            <EnhancedTableToolbar numSelected={selected.length} />\r\n            <TableContainer>\r\n              <Table\r\n                className={classes.table}\r\n                aria-labelledby=\"tableTitle\"\r\n                size={dense ? \"small\" : \"medium\"}\r\n                aria-label=\"enhanced table\"\r\n              >\r\n                <EnhancedTableHead\r\n                  classes={classes}\r\n                  numSelected={selected.length}\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  onSelectAllClick={handleSelectAllClick}\r\n                  onRequestSort={handleRequestSort}\r\n                  rowCount={rows.length}\r\n                />\r\n                <TableBody>\r\n                  {stableSort(rows, getComparator(order, orderBy))\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((row, index) => {\r\n                      const isItemSelected = isSelected(row.name);\r\n                      const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                      return (\r\n                        <TableRow\r\n                          hover\r\n                          onClick={(event) => handleClick(event, row.name)}\r\n                          role=\"checkbox\"\r\n                          aria-checked={isItemSelected}\r\n                          tabIndex={-1}\r\n                          key={row.name}\r\n                          selected={isItemSelected}\r\n                        >\r\n                          <TableCell padding=\"checkbox\">\r\n                            <Checkbox\r\n                              checked={isItemSelected}\r\n                              inputProps={{ \"aria-labelledby\": labelId }}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell\r\n                            component=\"th\"\r\n                            id={labelId}\r\n                            scope=\"row\"\r\n                            padding=\"none\"\r\n                          >\r\n                            {row.name}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{row.calories}</TableCell>\r\n                          <TableCell align=\"right\">{row.fat}</TableCell>\r\n                          <TableCell align=\"right\">{row.cons}</TableCell>\r\n\r\n                          <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                          <TableCell align=\"right\">{row.pres}</TableCell>\r\n\r\n                          <TableCell align=\"right\">{row.protein}</TableCell>\r\n                          <TableCell align=\"right\">{row.mess}</TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                      <TableCell colSpan={6} />\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25]}\r\n              component=\"div\"\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n          <FormControlLabel\r\n            control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n            label=\"Dense padding\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </DocLayout>\r\n  );\r\n}\r\n"],"sourceRoot":""}